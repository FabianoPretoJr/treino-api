// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projeto.Data;

namespace projeto.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201126182650_AdicionandoEntidades")]
    partial class AdicionandoEntidades
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("projeto.Models.Autopsia", b =>
                {
                    b.Property<int>("VitimaID")
                        .HasColumnType("int");

                    b.Property<int>("LegistaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Laudo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("VitimaID", "LegistaID");

                    b.HasIndex("LegistaID");

                    b.ToTable("autopsias");
                });

            modelBuilder.Entity("projeto.Models.Crime", b =>
                {
                    b.Property<int>("CriminosoID")
                        .HasColumnType("int");

                    b.Property<int>("VitimaID")
                        .HasColumnType("int");

                    b.Property<int>("PolicialID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("DelegaciaId")
                        .HasColumnType("int");

                    b.Property<int?>("DelegadoId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CriminosoID", "VitimaID", "PolicialID");

                    b.HasIndex("DelegaciaId");

                    b.HasIndex("DelegadoId");

                    b.HasIndex("PolicialID");

                    b.HasIndex("VitimaID");

                    b.ToTable("crimes");
                });

            modelBuilder.Entity("projeto.Models.Criminoso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("criminosos");
                });

            modelBuilder.Entity("projeto.Models.Delegacia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Batalhao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("delegacias");
                });

            modelBuilder.Entity("projeto.Models.Delegado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Funcional")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Turno")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("delegados");
                });

            modelBuilder.Entity("projeto.Models.Legista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CRM")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("legistas");
                });

            modelBuilder.Entity("projeto.Models.Policial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Funcional")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Patente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("policiais");
                });

            modelBuilder.Entity("projeto.Models.Vitima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Idade")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("vitimas");
                });

            modelBuilder.Entity("projeto.Models.Autopsia", b =>
                {
                    b.HasOne("projeto.Models.Legista", "Legista")
                        .WithMany("Autopsias")
                        .HasForeignKey("LegistaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto.Models.Vitima", "Vitima")
                        .WithMany("Autopsias")
                        .HasForeignKey("VitimaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("projeto.Models.Crime", b =>
                {
                    b.HasOne("projeto.Models.Criminoso", "Criminoso")
                        .WithMany("Crimes")
                        .HasForeignKey("CriminosoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto.Models.Delegacia", "Delegacia")
                        .WithMany()
                        .HasForeignKey("DelegaciaId");

                    b.HasOne("projeto.Models.Delegado", "Delegado")
                        .WithMany()
                        .HasForeignKey("DelegadoId");

                    b.HasOne("projeto.Models.Policial", "Policial")
                        .WithMany()
                        .HasForeignKey("PolicialID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("projeto.Models.Vitima", "Vitima")
                        .WithMany("Crimes")
                        .HasForeignKey("VitimaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
